<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_character_ext</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_button</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>arm = instance_create(x,y,obj_arm);
forearm = instance_create(x+48,y,obj_forearm);
segment_length = 76
target_x = mouse_x;
target_y = mouse_y;
isGrabbing = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
arm.x = x;
arm.y = y;
dir = point_direction(x,y,mouse_x, mouse_y);
dist = point_distance(x,y,mouse_x, mouse_y);
var elbow = 0;var dist_diff = 0;
if (dist &gt;= segment_length * 2){
    target_x = x + lengthdir_x(segment_length*2,dir);
    target_y = y + lengthdir_y(segment_length*2,dir);
}
else {
    target_x = mouse_x;
    target_y = mouse_y;
    
    dist_diff =  max(20, dist)/(segment_length*2);
    elbow = radtodeg(arccos(dist_diff));
}

arm.dir = dir - elbow;
forearm.dir = dir + elbow;

forearm.x = arm.x + lengthdir_x(segment_length,arm.dir);
forearm.y = arm.y + lengthdir_y(segment_length,arm.dir);



if (instance_exists(obj_roo)){
    var closest = instance_nearest(target_x, target_y, obj_roo);
    if (!mouse_check_button(mb_left)) {
        if (isGrabbing) {
            closest.speed = min(closest.cumulativeMomentum * closest.speedBonus, closest.topLaunchSpeed);
            closest.direction = point_direction(closest.lastX,closest.lastY,closest.x,closest.y);
            closest.tvspeed = closest.vspeed;
            closest.thspeed = closest.hspeed;
            closest.isLaunched = 1;
            //show_debug_message(closest.speed);
        }
        isGrabbing = 0;
        closest.isGrabbed = 0;
    }
    if (!closest.isLaunched &amp;&amp; (point_distance(closest.x, closest.y, target_x, target_y) &lt; 30 &amp;&amp; mouse_check_button(mb_left) || isGrabbing)){
        closest.x = target_x;
        closest.y = target_y;
        closest.isGrabbed = 1;
        isGrabbing = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room == rm_upgrades){
    room_goto_next();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index, global.samImg,x,y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
